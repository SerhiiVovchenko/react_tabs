{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentСomponent","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAIaA,EAA2B,SAAC,GAIlC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAmBH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAChDD,EAAK,GAEV,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACE,UAAQ,MAERE,UAAWE,IAAW,CACpB,YAAaN,EAAiBG,KAAOD,EAAIC,KAJ7C,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACHN,EAAIC,KAAOL,GACbC,EAAcG,IALpB,SASGA,EAAIO,SAdFP,EAAIC,WAqBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAiBU,cClCbb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBe,EAAtB,KACMb,EAAmBH,EAAKI,MAAK,qBAAGE,KAAgBL,MACjDD,EAAK,GAMV,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,GAAoBA,EAAiBS,SAG3D,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAbc,SAACG,GACnBW,EAAiBX,EAAIC,WChBzBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.52e03aaf.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { TabsType } from '../../types/Tabs';\n\nexport const Tabs: React.FC<TabsType> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentСomponent = tabs.find(tab => tab.id === selectedTabId)\n    || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={classNames({\n                'is-active': currentСomponent.id === tab.id,\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== selectedTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentСomponent.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const currentСomponent = tabs.find(({ id }) => id === selectedTabId)\n    || tabs[0];\n\n  const selectedTab = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${currentСomponent && currentСomponent.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={selectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}